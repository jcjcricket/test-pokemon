{"version":3,"sources":["components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","components/warning/index.js","components/warning/warning.js","components/pages/login-page/index.js","components/pages/login-page/login-page.js","components/pages/password-page/index.js","components/pages/password-page/password-page.js","components/card-view-item/index.js","components/card-view-item/card-view-item.js","components/card-view/index.js","components/card-view/card-view.js","components/sidebar/index.js","components/sidebar/sidebar.js","components/spinner/index.js","components/spinner/spinner.js","components/navbar/index.js","components/navbar/navbar.js","services/poke-api.js","components/pages/cards-page/cards-page.js","components/pages/cards-page/index.js","components/pages/card-page/card-page.js","components/pages/card-page/index.js","components/app/app.js","components/app/index.js","utils/randomNum.js","index.js"],"names":["ErrorIndicator","className","ErrorBoundry","state","hasError","this","setState","props","children","Component","Warning","text","LoginPage","handleLoginInput","handleLoginSubmit","isLoggedIn","inApp","isWarning","to","onSubmit","htmlFor","type","name","required","onKeyUp","e","PasswordPage","handlePinSubmit","handlePinInput","smsCode","placeholder","CardViewItem","info","style","textDecoration","wordWrap","id","src","imageUrl","alt","artist","CardView","data","cards","map","i","key","SideBar","types","subtypes","handleSelect","onChange","value","hidden","index","Spinner","NavBar","handleLogout","useContext","LoginContext","history","useHistory","location","useLocation","pathname","onClick","goBack","PokeApi","url","fetch","res","ok","Error","status","json","getResource","pokeApi","CardsPage","useState","setCards","setTypes","setSubTypes","selectedType","setselectedType","isLoading","setIsLoading","useEffect","a","getTypesList","dataTypes","getSubtypesList","dataSubTypes","includes","getTypeOf","getSubtypeOf","getAllCards","fetchData","target","console","log","CardPage","itemId","card","cardItem","setCardItem","getCard","imageUrlHiRes","attacks","subtype","damage","cost","resistances","evolvesFrom","React","createContext","App","setinApp","setSmsCode","setIsLoggedIn","setWarning","loginAndPassword","u","pin","truePin","preventDefault","uname","psw","Math","random","toFixed","toString","slice","setTimeout","Provider","path","exact","render","match","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ed559e5a.chunk.js","sourcesContent":["import React from 'react';\n\nimport './error-indicator.css';\n\nconst ErrorIndicator = () => {\n  return (\n    <div className='error-indicator'>\n      <span>There is an Error somewhere... </span>\n    </div>\n  );\n};\n\nexport default ErrorIndicator;\n","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\n\nimport ErrorIndicator from '../error-indicator/error-indicator';\n\nexport default class ErrorBoundry extends Component {\n\n  state = {\n    hasError: false\n  };\n\n  componentDidCatch() {\n    this.setState({\n      hasError: true\n    });\n  }\n\n  render() {\n\n    if (this.state.hasError) {\n      return <ErrorIndicator />\n    }\n\n    return this.props.children;\n  }\n}\n","import Warning from './warning';\r\n\r\nexport default Warning;\r\n","import React from 'react';\r\n\r\nimport './warning.css';\r\n\r\nconst Warning = ({ text}) => {\r\n  return <span className='warning'>{text}</span>;\r\n};\r\n\r\nexport default Warning;\r\n","import LoginPage from './login-page';\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Warning from '../../warning';\r\n\r\nimport './login-page.css';\r\n\r\nconst LoginPage = ({\r\n  handleLoginInput,\r\n  handleLoginSubmit,\r\n  isLoggedIn,\r\n  inApp,\r\n  isWarning: { isWarning, text },\r\n}) => {\r\n  if (inApp) {\r\n    return <Redirect to='/password' />;\r\n  }\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to='/' />;\r\n  }\r\n\r\n  return (\r\n    <div className='login-page'>\r\n      <form onSubmit={handleLoginSubmit}>\r\n        <div className='container'>\r\n          {isWarning ? <Warning text={text} /> : null}\r\n          <label htmlFor='uname'>\r\n            <b>Username</b>\r\n          </label>\r\n          <input\r\n            type='text'\r\n            name='uname'\r\n            required\r\n            onKeyUp={(e) => handleLoginInput(e)}\r\n          />\r\n\r\n          <label htmlFor='psw'>\r\n            <b>Password</b>\r\n          </label>\r\n          <input\r\n            type='password'\r\n            name='psw'\r\n            required\r\n            onKeyUp={(e) => handleLoginInput(e)}\r\n          />\r\n\r\n          <button type='submit'>Login</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import PasswordPage from './password-page';\r\n\r\nexport default PasswordPage;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Warning from '../../warning'\r\n\r\nimport './password-page.css';\r\n\r\nconst PasswordPage = ({\r\n  inApp,\r\n  isLoggedIn,\r\n  handlePinSubmit,\r\n  handlePinInput,\r\n  smsCode,\r\n  isWarning : {isWarning, text}\r\n}) => {\r\n  if (!inApp) {\r\n    return <Redirect to='/login' />;\r\n  }\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to='/' />;\r\n  }\r\n\r\n  return (\r\n    <div className='password-page'>\r\n      <form onSubmit={handlePinSubmit}>\r\n        <div className='container'>\r\n        {isWarning ? <Warning text={text} /> : null}\r\n          <h2>One more step:</h2>\r\n\r\n          <input\r\n            type='text'\r\n            placeholder={smsCode}\r\n            name='pin'\r\n            required\r\n            onKeyUp={(e) => handlePinInput(e)}\r\n          />\r\n          <button type='submit'>Confirm</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordPage;\r\n","import CardViewItem from './card-view-item';\r\n\r\nexport default CardViewItem;\r\n","import React from 'react';\r\nimport {\r\n  Link,\r\n \r\n} from 'react-router-dom';\r\n\r\nimport './card-view-item.css';\r\n\r\nconst CardViewItem = ({ info }) => {\r\n\r\n  return (\r\n    <Link style={{textDecoration: 'none', wordWrap: 'break-word'}} to={`/cards/${info.id}`}>\r\n        <div className='card-view-item' id={info.id}>\r\n          <img src={info.imageUrl} alt='' />\r\n          <p>Name: {info.name} </p>\r\n          <p>Artist: {info.artist} </p>\r\n        </div>\r\n      </Link>\r\n  );\r\n};\r\n\r\nexport default CardViewItem;\r\n","import CardView from './card-view';\r\n\r\nexport default CardView;\r\n","import React from 'react';\r\n\r\n\r\nimport CardViewItem from '../card-view-item';\r\n\r\nimport './card-view.css';\r\n\r\nconst CardView = ({ cards: { cards } }) => {\r\n  let data = cards.map((i) => {\r\n    return <CardViewItem info={i} key={i.id} />;\r\n  });\r\n\r\n  return (\r\n    <div className='card-view'>\r\n        <div className='card-view-row'>{data}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardView;\r\n","import SideBar from './sidebar';\r\n\r\nexport default SideBar;\r\n","import React from 'react';\r\n\r\nimport './sidebar.css';\r\n\r\nconst SideBar = ({ types, subtypes, handleSelect }) => {\r\n  return (\r\n      <div className='sidebar'>\r\n      <div>\r\n          <select\r\n            className='select'\r\n            name='type'\r\n            onChange={(e) => handleSelect(e)}>\r\n            <option value=\"0\" hidden>Select Type:</option>\r\n            {types.types.map((i, index) => {\r\n              return (\r\n                <option value={i} key={index}>\r\n                  {i}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <select\r\n            className='select'\r\n            name='type'\r\n          onChange={(e) => handleSelect(e)}>\r\n           <option value=\"0\" hidden>Select Subtype:</option>\r\n            {subtypes.subtypes.map((i) => {\r\n              return (\r\n                <option value={i} key={i}>\r\n                  {i}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import Spinner from './spinner'\r\n\r\nexport default Spinner","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"cssload-loader\"></div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import NavBar from './navbar';\r\n\r\nexport default NavBar;\r\n","import React, { useContext } from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport { LoginContext } from '../app/app';\r\n\r\nimport './navbar.css';\r\n\r\nconst NavBar = ({ handleLogout }) => {\r\n  const isLoggedIn = useContext(LoginContext);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <div className='navbar'>\r\n      <ul>\r\n        <li className='navbar-back'>\r\n          {location.pathname !== '/' ?  <Link\r\n            to=''\r\n            onClick={() => {\r\n              history.goBack();\r\n            }}>\r\n            Back\r\n          </Link> : null}\r\n         \r\n        </li>\r\n\r\n        <li className='navbar-logout'>\r\n          <Link onClick={handleLogout} to='/'>\r\n            {isLoggedIn ? 'Logout' : 'Login'}\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","\r\n\r\nclass PokeApi {\r\n  async getResource(url) {\r\n    const res = await fetch(url);\r\n    if (!res.ok) {\r\n      throw new Error(`cant fetch api return ${res.status}`);\r\n    }\r\n    return await res.json();\r\n  }\r\n\r\n  async getAllCards() {\r\n    return await this.getResource(`https://api.pokemontcg.io/v1/cards/`);\r\n  }\r\n\r\n  async getCard(id) {\r\n    return await this.getResource(`https://api.pokemontcg.io/v1/cards/${id}/`);\r\n  }\r\n\r\n  async getTypesList() {\r\n    return await this.getResource(`https://api.pokemontcg.io/v1/types/`);\r\n  }\r\n\r\n  async getSubtypesList() {\r\n    return await this.getResource(`https://api.pokemontcg.io/v1/subtypes/`);\r\n  }\r\n\r\n  async getTypeOf(id) {\r\n    return await this.getResource(`https://api.pokemontcg.io/v1/cards?types=${id}`);\r\n  }\r\n\r\n  async getSubtypeOf(id) {\r\n    return await this.getResource(`https://api.pokemontcg.io/v1/cards?subtype=${id}`);\r\n  }\r\n}\r\n\r\n// let a = new PokeApi()\r\n\r\n// a.getCard('xy7-10').then(d => console.log(d))\r\n\r\nexport default PokeApi;\r\n","import React, { useState, useEffect } from 'react';\r\nimport CardView from '../../card-view';\r\nimport SideBar from '../../sidebar';\r\nimport Spinner from '../../spinner';\r\nimport Navbar from '../../navbar';\r\n\r\nimport './cards-page.css';\r\n\r\nimport PokeApi from '../../../services/poke-api';\r\n\r\nconst pokeApi = new PokeApi();\r\n\r\nconst CardsPage = ({ handleLogout }) => {\r\n  const [cards, setCards] = useState({ cards: [] });\r\n  const [types, setTypes] = useState({ types: [] });\r\n  const [subtypes, setSubTypes] = useState({ subtypes: [] });\r\n  const [selectedType, setselectedType] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n\r\n    async function fetchData() {\r\n      const dataTypes = await pokeApi.getTypesList();\r\n      const dataSubTypes = await pokeApi.getSubtypesList();\r\n      setTypes(dataTypes);\r\n      setSubTypes(dataSubTypes);\r\n      if (types.types.includes(selectedType)) {\r\n        const data = await pokeApi.getTypeOf(selectedType);\r\n        setCards(data);\r\n        setIsLoading(false);\r\n      } else if (subtypes.subtypes.includes(selectedType)) {\r\n        const data = await pokeApi.getSubtypeOf(selectedType);\r\n        setCards(data);\r\n        setIsLoading(false);\r\n      } else {\r\n        const data = await pokeApi.getAllCards();\r\n        setCards(data);\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [selectedType]);\r\n\r\n  const handleSelect = (e) => {\r\n    setselectedType(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n  return (\r\n    <div>\r\n      <Navbar handleLogout={handleLogout} />\r\n      <div className='page'>\r\n        <div className='cards-page-container'>\r\n          <SideBar\r\n            types={types}\r\n            subtypes={subtypes}\r\n            handleSelect={handleSelect}\r\n          />\r\n          <CardView cards={cards} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardsPage;\r\n","import CardsPage from './cards-page'\r\n\r\nexport default CardsPage;","import React, { useEffect, useState } from 'react';\r\n\r\nimport PokeApi from '../../../services/poke-api';\r\n\r\nimport Navbar from '../../navbar';\r\n\r\nimport './card-page.css';\r\n\r\nconst pokeApi = new PokeApi();\r\n\r\nconst CardPage = ({ itemId }) => {\r\n  const [cardItem, setCardItem] = useState({ card: {} });\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const data = await pokeApi.getCard(itemId);\r\n      setCardItem(data);\r\n    }\r\n    fetchData();\r\n  }, [itemId]);\r\n\r\n  let data = cardItem.card;\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className='page'>\r\n        <div className='card-page-container'>\r\n          <div className='img-container'>\r\n            <img src={data.imageUrlHiRes} alt='pokemon_card' />\r\n            <div>\r\n              {data.attacks\r\n                ? data.attacks.map((i) => <p key={data.id}>{i.text} </p>)\r\n                : '-'}\r\n            </div>\r\n          </div>\r\n\r\n          <div className='pokemon-details'>\r\n            <ul>\r\n              <li>Pokemon name: {data.name ? data.name : '-'}</li>\r\n              <li>Type: {data.types ? data.types : '-'}</li>\r\n              <li>Subtype: {data.subtype ? data.subtype : '-'}</li>\r\n              <hr />\r\n              <ul>\r\n                Attack Damage:{' '}\r\n                {data.attacks\r\n                  ? data.attacks.map((i) => <li key={data.id}>{i.damage} </li>)\r\n                  : '-'}\r\n              </ul>\r\n              <ul>\r\n                Attack Cost:{' '}\r\n                {data.attacks\r\n                  ? data.attacks.map((i) => <li key={data.id}>{i.cost} </li>)\r\n                  : '-'}\r\n              </ul>\r\n              <li>\r\n                Resistances:{' '}\r\n                {data.resistances ? data.resistances.map((i) => i.type) : '-'}\r\n                {data.resistances ? data.resistances.map((i) => i.value) : '-'}\r\n              </li>\r\n              <li>Evolves From: {data.evolvesFrom ? data.evolvesFrom : '-'}</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardPage;\r\n","import CardPage from './card-page';\r\n\r\nexport default CardPage;\r\n","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\n\nimport ErrorBoundry from '../error-boundry';\nimport LoginPage from '../pages/login-page';\nimport PasswordPage from '../pages/password-page';\nimport CardsPage from '../pages/cards-page';\nimport CardPage from '../pages/card-page';\n\nimport { generateRandomNum } from '../../utils/randomNum';\n\nimport './app.css';\n\nexport const LoginContext = React.createContext();\n\nfunction App() {\n  const [inApp, setinApp] = useState(false);\n  const [smsCode, setSmsCode] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isWarning, setWarning] = useState({ isWarning: false, text: '' });\n\n  const loginAndPassword = {\n    trueLogin: 'kode@kode.ru',\n    truePassword: 'Enk0deng',\n  };\n\n  const u = {};\n\n  const pin = {\n    truePin: smsCode,\n    pin: '',\n  };\n\n  const handleLoginInput = (e) => {\n    u[e.target.name] = e.target.value;\n  };\n\n  const handleLoginSubmit = (e) => {\n    e.preventDefault();\n    if (\n      loginAndPassword.trueLogin === u.uname &&\n      loginAndPassword.truePassword === u.psw\n    ) {\n      setinApp(true);\n      setSmsCode(generateRandomNum());\n    } else {\n      setWarning({\n        isWarning: true,\n        text: 'Invalid password or username. Try again.',\n      });\n      setTimeout(() => {\n        setWarning({\n          isWarning: false,\n          text: '',\n        });\n      }, 3000);\n    }\n  };\n\n  const handlePinInput = (e) => {\n    pin[e.target.name] = e.target.value;\n  };\n\n  const handlePinSubmit = (e) => {\n    e.preventDefault();\n    if (pin.truePin === pin.pin) {\n      setIsLoggedIn(true);\n    } else {\n      setWarning({\n        isWarning: true,\n        text: 'Invalid PIN. Try again',\n      });\n      setTimeout(() => {\n        setWarning({\n          isWarning: false,\n          text: '',\n        });\n      }, 3000);\n    }\n  };\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setinApp(false);\n  };\n\n  return (\n    <ErrorBoundry>\n      <LoginContext.Provider value={isLoggedIn}>\n        <Router>\n          <div className='app'>\n            <Switch>\n              <Route\n                path='/login'\n                exact\n                render={() => {\n                  return (\n                    <LoginPage\n                      handleLoginInput={handleLoginInput}\n                      handleLoginSubmit={handleLoginSubmit}\n                      isLoggedIn={isLoggedIn}\n                      inApp={inApp}\n                      isWarning={isWarning}\n                    />\n                  );\n                }}\n              />\n              <Route\n                path='/password'\n                exact\n                render={() => {\n                  return (\n                    <PasswordPage\n                      isLoggedIn={isLoggedIn}\n                      inApp={inApp}\n                      smsCode={smsCode}\n                      handlePinInput={handlePinInput}\n                      handlePinSubmit={handlePinSubmit}\n                      isWarning={isWarning}\n                    />\n                  );\n                }}\n              />\n              <Route\n                path='/'\n                exact\n                isLoggedIn={isLoggedIn}\n                render={() => {\n                  if (!isLoggedIn) {\n                    return <Redirect to='/login' />;\n                  }\n                  return (\n                    <CardsPage\n                      isLoggedIn={isLoggedIn}\n                      handleLogout={handleLogout}\n                    />\n                  );\n                }}\n              />\n              <Route\n                path='/cards/:id'\n                exact\n                render={({ match }) => {\n                  if (!isLoggedIn) {\n                    return <Redirect to='/login' />;\n                  }\n                  let id = match.params.id;\n\n                  return <CardPage itemId={id} />;\n                }}\n              />\n              <Redirect to='/' />\n            </Switch>\n          </div>\n        </Router>\n      </LoginContext.Provider>\n    </ErrorBoundry>\n  );\n}\n\nexport default App;\n","import App from './app';\r\n\r\nexport default App;\r\n","export const generateRandomNum = () => {\r\n  let num = (Math.random() * 1000000).toFixed().toString().slice(0,4);\r\n  return num\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './index.css';\n\nimport App from './components/app';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}